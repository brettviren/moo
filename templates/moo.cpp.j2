{% macro struct(obj) %}
struct {{ obj.name }} {
    {% for a in obj.attrs %}
    {% if a.type.name == "str" %}
        {{a.type.c}} {{a.name}} = "{{a.def}}";
    {% else %}
        {{a.type.c}} {{a.name}} = {{a.def}};
    {% endif %}
    {% endfor %}
    };
{% endmacro %}

{% macro method_decl(m) %}
{{m.type.c}} {{m.name}}({% for a in m.attrs %}{{a.type.c}} {{a.name}}{{ "," if not loop.last }}{% endfor %});
{% endmacro %}


{% macro smltt(tt) %}
{% for t in tt %}
{{ "," if not loop.first }}{{t.star if t.star}} state<{{t.ini}}> + event<{{t.eve}}> {% if t.grds %}[ {{ t.grds|join(" and ") }} ]{% endif %} / {% if t.acts|length == 1%}{{ t.acts[0] }}{% elif t.acts|length > 1%}({{t.acts|join(' and ')}}){%endif%} = state<{{ t.fin }}>
{% endfor %}
{% endmacro %}
