{% import 'moo.cpp.j2' as moo %}

#ifndef {{namespace|upper}}_{{classname|upper}}_HPP_SEEN
#define {{namespace|upper}}_{{classname|upper}}_HPP_SEEN

#include <string>
#include <sml.hpp>

namespace {{namespace}} {

    struct {{structname}} {
        // states
        {% for s in machine.states %}
        {{ moo.struct(s)|indent }}
        {% endfor %}

        // events
        {% for e in machine.events %}
        {{ moo.struct(e)|indent }}
        {% endfor %}

        // guards
        {% for g in machine.guards %}
        {{ moo.method_decl(g)|indent }}
        {% endfor %}

        // actions
        {% for a in machine.actions %}
        {{ moo.method_decl(a)|indent }}
        {% endfor %}

        // context

        {{ moo.struct(context)|indent }}
        {{context.name}} ctx;

        auto operator()() const noexcept {
            using namespace boost::sml;

            // clang-format off
            return make_transition_table(
{{ moo.smltt_lambdas(machine.tt) }}
                );
            // clang-format on
        }

    };

}

#endif // {{namespace|upper}}_{{classname|upper}}_HPP_SEEN
