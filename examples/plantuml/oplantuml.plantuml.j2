{# This provides some helper macros for plantuml templates #}

{% macro declare_sequence(model, t) %}
{% set pp = "::".join(t.path + [t.name]) %}
' sequence {{pp}}
class {{ pp }} << (V,blue) >> {
        {{t["items"]|replace(".","::")}}[] items
}
{{t["items"]|replace(".","::")}} o-- {{ pp }}
{%- endmacro -%}

{% macro declare_record(model, t) %}
{% set pp = "::".join(t.path + [t.name]) %}
' record {{pp}}
class {{ pp }} {
        {% for f in t.fields %}
        {{f.item|listify|relpath(model.path)|join("::")}} {{f.name}}
        {% endfor -%}
}
{% for f in t.fields %}
{{f.item|listify|relpath(model.path)|join("::")}} o-- {{pp}}
{% endfor -%}
{%- endmacro -%}

{% macro declare_enum(model, t) %}
' enum {{t.name}}
{% set pp = "::".join(t.path + [t.name]) %}
enum {{pp}}
{%- endmacro -%}

{% macro declare_boolean(model, t) %}
' boolean {{t.name}}
{% set pp = "::".join(t.path + [t.name]) %}
class {{pp}} << (B,white) >> 
{%- endmacro -%}

{% macro declare_string(model, t) %}
' string {{t.name}}
{% set pp = "::".join(t.path + [t.name]) %}
class {{pp}} << (S,orchid) >> 
{%- endmacro -%}

{% macro declare_number(model, t) %}
' number {{t.name}}
{% set pp = "::".join(t.path + [t.name]) %}
class {{pp}} << (N,wheat) >> 
{%- endmacro -%}

{% macro declare_any(model, t) %}
{% set pp = "::".join(t.path + [t.name]) %}
' any {{pp}}
class {{ pp }} << (A,red) >>
{%- endmacro -%}
